<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>org.alfresco.extension</groupId>
    <artifactId>pdf-toolkit-share</artifactId>
    <version>1.5-SNAPSHOT</version>
    <name>Alfresco PDF Toolkit - Share</name>   
    <packaging>jar</packaging>
    <description>Alfresco PDF Toolkit Share customizations</description>

	<!-- DECOMMENT IF YOU WANT TO RUN THE EMEBEDDED TOMCAT -->
    <!--
    <parent>
        <groupId>org.alfresco.extension</groupId>
        <artifactId>pdf-toolkit</artifactId>
        <version>1.5-SNAPSHOT</version>
    </parent>
	-->
	
   <properties>
  	    <maven.javadoc.skip>true</maven.javadoc.skip>
	    <alfresco.sdk.version>3.0.1</alfresco.sdk.version>
	    <alfresco.share.version>5.2.f</alfresco.share.version>
		<alfresco.surf.version>6.11</alfresco.surf.version>
	    <!-- To know which resource folder to filter for AMP extension projects -->
		<!-- <app.amp.folder>src/main/amp</app.amp.folder> -->
		<!-- To know which folder filtered AMP resources should end up in under /target -->
		<app.amp.output.folder>${project.build.directory}/amp</app.amp.output.folder>
		<!-- Turns on/off POM properties filtering globally. By default filtering is on.
        This can be overridden in your POM, but do it at your own risk as it may break SDK functionalities -->
        <app.filtering.enabled>true</app.filtering.enabled>
	    
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

        <alfresco.groupId>org.alfresco</alfresco.groupId>
       	<maven.alfresco.edition>community</maven.alfresco.edition>
       	<maven.compiler.source>1.8</maven.compiler.source>
        <maven.compiler.target>1.8</maven.compiler.target>
		
		<timestamp>${maven.build.timestamp}</timestamp>
		<maven.build.timestamp.format>yyyyMMdd.HHmmss</maven.build.timestamp.format>
        <!-- Alfresco Share Community 5.2 -->
        <servlet-api.version>2.5</servlet-api.version>
    </properties>
  
	    
    <dependencyManagement>
        <dependencies>
           <!-- Redefine the following Share dependencies as they have different
                version numbers than platform. They are defined in alfresco-platform-distribution... -->
            <dependency>
                <groupId>${alfresco.groupId}</groupId>
                <artifactId>share</artifactId>
                <version>${alfresco.share.version}</version>
                <type>war</type>
                <scope>provided</scope>
            </dependency>
            <dependency>
                <groupId>${alfresco.groupId}</groupId>
                <artifactId>share</artifactId>
                <version>${alfresco.share.version}</version>
                <classifier>classes</classifier>
                <scope>provided</scope>
            </dependency>
            <dependency>
                <groupId>${alfresco.groupId}</groupId>
                <artifactId>alfresco-web-framework-commons</artifactId>
                <version>${alfresco.share.version}</version>
                <classifier>classes</classifier>
                <scope>provided</scope>
            </dependency>

            <!-- Redefine the following surf dependencies as they have no resolvable
                version in the alfresco-platform-distribution artifact -->
            <dependency>
                <groupId>org.alfresco.surf</groupId>
                <artifactId>spring-surf</artifactId>
                <version>${alfresco.surf.version}</version>
                <scope>provided</scope>
            </dependency>
            <dependency>
                <groupId>org.alfresco.surf</groupId>
                <artifactId>spring-surf-api</artifactId>
                <version>${alfresco.surf.version}</version>
                <scope>provided</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>
    
    <dependencies>
        <dependency>
            <groupId>${alfresco.groupId}</groupId>
            <artifactId>share</artifactId>
            <classifier>classes</classifier>
        </dependency>
        <!--  
        <dependency>
            <groupId>org.alfresco.surf</groupId>
            <artifactId>spring-surf-api</artifactId>
            <version>${alfresco.surf.version}</version>
            <scope>provided</scope>
        </dependency>
        -->
        <dependency>
            <groupId>org.alfresco.surf</groupId>
            <artifactId>spring-surf-api</artifactId>
        </dependency>
        <dependency>
			<groupId>${alfresco.groupId}</groupId>
			<artifactId>alfresco-share-services</artifactId>
			<version>${alfresco.share.version}</version>
			<classifier>classes</classifier>
		</dependency>
        
        <!--===============================================================
             The following dependencies are needed to be able to compile the
             custom functional tests that are based on Page Objects (PO)
             ===============================================================-->

        <!-- Bring in the Share Page Objects (PO) used in our functional tests.
             It contains page objects such as LoginPage and it also brings
             in selenium-grid and selenium. -->
        <!-- 
        <dependency>
            <groupId>${alfresco.groupId}</groupId>
            <artifactId>share-po</artifactId>
            <version>${alfresco.version}</version>
            <scope>test</scope>
        </dependency>
        -->
        <!-- Bring in the Share Page Object (PO) Tests that comes with Alfresco. It has
             the org.alfresco.po.share.AbstractTest class that our custom tests extend. -->
        <!-- 
        <dependency>
            <groupId>${alfresco.groupId}</groupId>
            <artifactId>share-po</artifactId>
            <version>${alfresco.version}</version>
            <classifier>tests</classifier>
        	<scope>test</scope>
            <exclusions>
                <exclusion>
                    <groupId>org.seleniumhq.selenium</groupId>
                    <artifactId>selenium-java</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.seleniumhq.selenium</groupId>
                    <artifactId>selenium-server</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        -->
        <!-- Test NG is defined with test scope in share-po, so need it here too -->
        <!-- Alfresco code creates a wrapper around Test NG -->
        <!--
        <dependency>
            <groupId>org.alfresco.test</groupId>
            <artifactId>alfresco-testng</artifactId>
            <version>1.1</version>
            <scope>test</scope>
            <exclusions>
                <exclusion>
                    <groupId>org.hamcrest</groupId>
                    <artifactId>hamcrest-core</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        -->
    </dependencies>
    
    <build>
   	    <pluginManagement>
		  	<plugins>
			  	<plugin>
					<artifactId>maven-assembly-plugin</artifactId>
					<version>2.6</version>
					<executions>
					    <execution>
					        <id>build-amp-file</id>
					        <phase>package</phase>
					        <goals>
					            <goal>single</goal>
					        </goals>
					        <configuration>
					            <appendAssemblyId>false</appendAssemblyId>
					            <descriptor>src/main/assembly/amp.xml</descriptor>
					        </configuration>
					    </execution>
					</executions>
					<configuration>
					    <appendAssemblyId>false</appendAssemblyId>
					    <descriptor>src/main/assembly/amp.xml</descriptor>
					</configuration>
					<dependencies>
					    <dependency>
					        <groupId>org.alfresco.maven.plugin</groupId>
					        <artifactId>alfresco-maven-plugin</artifactId>
					        <version>${alfresco.sdk.version}</version>
					    </dependency>
					</dependencies>
			   </plugin>	
		  	  <plugin>
                <groupId>org.alfresco.maven.plugin</groupId>
                <artifactId>alfresco-maven-plugin</artifactId>
                <version>${alfresco.sdk.version}</version>
                <configuration>

                    <!-- We assume that the platform/repository is already running on localhost:8080 -->
                    <enableH2>false</enableH2>
                    <enablePlatform>false</enablePlatform>
                    <enableSolr>false</enableSolr>

                    <!-- Enable the Share webapp, which is what we customize with Share JAR modules -->
                    <enableShare>true</enableShare>

                    <!--
                       JARs and AMPs that should be overlayed/applied to the Share WAR
                       (i.e. share.war)
                   -->
                    <shareModules>
                        <!-- Bring in this JAR project, need to be included here, otherwise share-config-custom.xml
                             will not be picked up. It will not be read from target/classes/META-INF -->
                        <moduleDependency>
                            <groupId>${project.groupId}</groupId>
                            <artifactId>${project.artifactId}</artifactId>
                            <version>${project.version}</version>
                        </moduleDependency>
                    </shareModules>
                </configuration>
            </plugin>
		      <plugin>
		        <groupId>org.apache.maven.plugins</groupId>
		        <artifactId>maven-release-plugin</artifactId>
		        <version>2.5.3</version>
		        <configuration>
		          <goals>deploy</goals>
		          <tagNameFormat>@{project.version}</tagNameFormat>
		        </configuration>
		      </plugin>
		      
		      <plugin>
		          <groupId>org.apache.maven.plugins</groupId>
		          <artifactId>maven-resources-plugin</artifactId>
		          <version>3.0.1</version>
		          <configuration>
		              <encoding>UTF-8</encoding>
		              <nonFilteredFileExtensions> <!-- jpg, jpeg, gif, bmp and png are added automatically -->
		                  <nonFilteredFileExtension>ftl</nonFilteredFileExtension>
		                  <nonFilteredFileExtension>acp</nonFilteredFileExtension>
		                  <nonFilteredFileExtension>svg</nonFilteredFileExtension>
		                  <nonFilteredFileExtension>pdf</nonFilteredFileExtension>
		                  <nonFilteredFileExtension>doc</nonFilteredFileExtension>
		                  <nonFilteredFileExtension>docx</nonFilteredFileExtension>
		                  <nonFilteredFileExtension>xls</nonFilteredFileExtension>
		                  <nonFilteredFileExtension>xlsx</nonFilteredFileExtension>
		                  <nonFilteredFileExtension>ppt</nonFilteredFileExtension>
		                  <nonFilteredFileExtension>pptx</nonFilteredFileExtension>
		                  <nonFilteredFileExtension>bin</nonFilteredFileExtension>
		                  <nonFilteredFileExtension>lic</nonFilteredFileExtension>
		                  <nonFilteredFileExtension>swf</nonFilteredFileExtension>
		                  <nonFilteredFileExtension>zip</nonFilteredFileExtension>
		                  <nonFilteredFileExtension>msg</nonFilteredFileExtension>
		                  <nonFilteredFileExtension>jar</nonFilteredFileExtension>
		                  <nonFilteredFileExtension>ttf</nonFilteredFileExtension>
		                  <nonFilteredFileExtension>eot</nonFilteredFileExtension>
		                  <nonFilteredFileExtension>woff</nonFilteredFileExtension>
		                  <nonFilteredFileExtension>woff2</nonFilteredFileExtension>
		                  <nonFilteredFileExtension>css</nonFilteredFileExtension>
		                  <nonFilteredFileExtension>ico</nonFilteredFileExtension>
		                  <nonFilteredFileExtension>psd</nonFilteredFileExtension>
		                  <nonFilteredFileExtension>js</nonFilteredFileExtension>
		              </nonFilteredFileExtensions>
		          </configuration>
		        </plugin>
		        <!-- Compress JavaScript files and store as *-min.js -->
		         	          
	            <plugin>
	                <groupId>net.alchim31.maven</groupId>
	                <artifactId>yuicompressor-maven-plugin</artifactId>
	                <version>1.5.1</version>
	                <executions>
						<execution>
							<goals>
								<goal>compress</goal>
							</goals>
						</execution>
					</executions>
					<configuration>
						<jswarn>false</jswarn>
						<force>true</force>
						<excludes>
							<exclude>**/*.post.js</exclude>
							<exclude>**/*.lib.js</exclude>
							<exclude>**/*.get.js</exclude>
							<exclude>**/*-min.js</exclude>
							<exclude>**/WEB-INF/**</exclude>
							<exclude>**/tiny_mce/**</exclude>
							<exclude>**/yui/**</exclude>
							<exclude>**/log4javascript*.js</exclude>					
				            <exclude>**/site-webscripts/**/*.js</exclude>
				            <exclude>**/alfresco/templates/**/*.js</exclude>
						</excludes>
					</configuration>
	            </plugin>
				<!--This plugin's configuration is used to store Eclipse m2e settings only. It has no influence on the Maven build itself.-->
				<plugin>
					<groupId>org.eclipse.m2e</groupId>
					<artifactId>lifecycle-mapping</artifactId>
					<version>1.0.0</version>
					<configuration>
						<lifecycleMappingMetadata>
							<pluginExecutions>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>
											net.alchim31.maven
										</groupId>
										<artifactId>
											yuicompressor-maven-plugin
										</artifactId>
										<versionRange>
											[1.2,)
										</versionRange>
										<goals>
											<goal>compress</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore />
									</action>
								</pluginExecution>
							</pluginExecutions>
						</lifecycleMappingMetadata>
					</configuration>
				</plugin>				
		  	</plugins>
	  	</pluginManagement>

	   	<!-- Overrinding Resources of parent pom -->
	   	<!--
		This is done by the maven-resources-plugin and configured in <build> / <resources>. 
		Each <resource> definition in there has a <filtered>true|false</filtered> option that 
		controls whether maven should replace properties like ${project.artifactId} when copying 
		the resources over or not.
		-->
		<resources>
			<!-- Filter the resource files in this project and do property substitutions -->
		    <!--
		    <resource>
                <directory>src/main/resources</directory>
                <filtering>true</filtering>
            </resource>
            -->
			<!-- Esclusione file autogenerati da Eclipse e Esclusione file che utilizzano marcatori simili a quelli usati da maven  -->						
			<resource>
				<directory>src/main/resources</directory>
				<targetPath>${project.build.directory}</targetPath>
				<filtering>true</filtering>
				<excludes>					
					<exclude>**/*.jsfdia</exclude>
					<exclude>**/*.ftl</exclude>
					<exclude>**/*.jasper</exclude>
					<exclude>**/*.ks</exclude>
					<exclude>**/*.png</exclude>					
				</excludes>
			</resource>
			<!-- Inclusione delle risorse che utilizzano marcatori simili a quelli usati da maven mettendo il filtering a false, cosi' i tag non vengono rimpiazzati -->			 
			<resource>
				<directory>src/main/resources</directory>
				<targetPath>${project.build.directory}</targetPath>
				<filtering>false</filtering>
				<includes>
					<include>**/*.ftl</include>
					<include>**/*.jasper</include>
					<include>**/*.ks</include>
					<include>**/*.png</include>
				</includes>
			</resource>
		</resources>
    </build>
    
</project>
